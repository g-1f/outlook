{"version":3,"sources":["useActiveDescendant.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { useOnKeyboardNavigationChange } from '@fluentui/react-tabster';\nimport { useOptionWalker } from './useOptionWalker';\nimport { ACTIVEDESCENDANT_ATTRIBUTE, ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE } from './constants';\nimport { scrollIntoView } from './scrollIntoView';\nexport function useActiveDescendant(options) {\n    const { imperativeRef, matchOption: matchOptionUnstable } = options;\n    const focusVisibleRef = React.useRef(false);\n    const activeIdRef = React.useRef(null);\n    const activeParentRef = React.useRef(null);\n    useOnKeyboardNavigationChange((isNavigatingWithKeyboard)=>{\n        focusVisibleRef.current = isNavigatingWithKeyboard;\n        const active = getActiveDescendant();\n        if (!active) {\n            return;\n        }\n        if (isNavigatingWithKeyboard) {\n            active.setAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE, '');\n        } else {\n            active.removeAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE);\n        }\n    });\n    const matchOption = useEventCallback(matchOptionUnstable);\n    const listboxRef = React.useRef(null);\n    const { optionWalker, listboxCallbackRef } = useOptionWalker({\n        matchOption\n    });\n    const getActiveDescendant = React.useCallback(()=>{\n        var _listboxRef_current;\n        return (_listboxRef_current = listboxRef.current) === null || _listboxRef_current === void 0 ? void 0 : _listboxRef_current.querySelector(`#${activeIdRef.current}`);\n    }, [\n        listboxRef\n    ]);\n    const blurActiveDescendant = React.useCallback(()=>{\n        var _activeParentRef_current;\n        const active = getActiveDescendant();\n        if (active) {\n            active.removeAttribute(ACTIVEDESCENDANT_ATTRIBUTE);\n            active.removeAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE);\n        }\n        (_activeParentRef_current = activeParentRef.current) === null || _activeParentRef_current === void 0 ? void 0 : _activeParentRef_current.removeAttribute('aria-activedescendant');\n        activeIdRef.current = null;\n    }, [\n        activeParentRef,\n        getActiveDescendant\n    ]);\n    const focusActiveDescendant = React.useCallback((nextActive)=>{\n        var _activeParentRef_current;\n        if (!nextActive) {\n            return;\n        }\n        blurActiveDescendant();\n        scrollIntoView(nextActive, listboxRef.current);\n        (_activeParentRef_current = activeParentRef.current) === null || _activeParentRef_current === void 0 ? void 0 : _activeParentRef_current.setAttribute('aria-activedescendant', nextActive.id);\n        activeIdRef.current = nextActive.id;\n        nextActive.setAttribute(ACTIVEDESCENDANT_ATTRIBUTE, '');\n        if (focusVisibleRef.current) {\n            nextActive.setAttribute(ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE, '');\n        }\n    }, [\n        activeParentRef,\n        listboxRef,\n        blurActiveDescendant\n    ]);\n    const controller = React.useMemo(()=>({\n            first: ({ passive } = {})=>{\n                const first = optionWalker.first();\n                if (!passive) {\n                    focusActiveDescendant(first);\n                }\n                return first === null || first === void 0 ? void 0 : first.id;\n            },\n            last: ({ passive } = {})=>{\n                const last = optionWalker.last();\n                if (!passive) {\n                    focusActiveDescendant(last);\n                }\n                return last === null || last === void 0 ? void 0 : last.id;\n            },\n            next: ({ passive } = {})=>{\n                const active = getActiveDescendant();\n                if (!active) {\n                    return;\n                }\n                optionWalker.setCurrent(active);\n                const next = optionWalker.next();\n                if (!passive) {\n                    focusActiveDescendant(next);\n                }\n                return next === null || next === void 0 ? void 0 : next.id;\n            },\n            prev: ({ passive } = {})=>{\n                const active = getActiveDescendant();\n                if (!active) {\n                    return;\n                }\n                optionWalker.setCurrent(active);\n                const next = optionWalker.prev();\n                if (!passive) {\n                    focusActiveDescendant(next);\n                }\n                return next === null || next === void 0 ? void 0 : next.id;\n            },\n            blur: ()=>{\n                blurActiveDescendant();\n            },\n            active: ()=>{\n                var _getActiveDescendant;\n                return (_getActiveDescendant = getActiveDescendant()) === null || _getActiveDescendant === void 0 ? void 0 : _getActiveDescendant.id;\n            },\n            focus: (id)=>{\n                if (!listboxRef.current) {\n                    return;\n                }\n                const target = listboxRef.current.querySelector(`#${id}`);\n                if (target) {\n                    focusActiveDescendant(target);\n                }\n            },\n            find (predicate, { passive, startFrom } = {}) {\n                const target = optionWalker.find(predicate, startFrom);\n                if (!passive) {\n                    focusActiveDescendant(target);\n                }\n                return target === null || target === void 0 ? void 0 : target.id;\n            }\n        }), [\n        optionWalker,\n        listboxRef,\n        focusActiveDescendant,\n        blurActiveDescendant,\n        getActiveDescendant\n    ]);\n    React.useImperativeHandle(imperativeRef, ()=>controller);\n    return {\n        listboxRef: useMergedRefs(listboxRef, listboxCallbackRef),\n        activeParentRef,\n        controller\n    };\n}\n"],"names":["useActiveDescendant","options","imperativeRef","matchOption","matchOptionUnstable","focusVisibleRef","React","useRef","activeIdRef","activeParentRef","useOnKeyboardNavigationChange","isNavigatingWithKeyboard","current","active","getActiveDescendant","setAttribute","ACTIVEDESCENDANT_FOCUSVISIBLE_ATTRIBUTE","removeAttribute","useEventCallback","listboxRef","optionWalker","listboxCallbackRef","useOptionWalker","useCallback","_listboxRef_current","querySelector","blurActiveDescendant","_activeParentRef_current","ACTIVEDESCENDANT_ATTRIBUTE","focusActiveDescendant","nextActive","scrollIntoView","id","controller","useMemo","first","passive","last","next","setCurrent","prev","blur","_getActiveDescendant","focus","target","find","predicate","startFrom","useImperativeHandle","useMergedRefs"],"mappings":";;;;+BAMgBA;;;eAAAA;;;;iEANO;gCACyB;8BACF;iCACd;2BACoD;gCACrD;AACxB,SAASA,oBAAoBC,OAAO;IACvC,MAAM,EAAEC,aAAa,EAAEC,aAAaC,mBAAmB,EAAE,GAAGH;IAC5D,MAAMI,kBAAkBC,OAAMC,MAAM,CAAC;IACrC,MAAMC,cAAcF,OAAMC,MAAM,CAAC;IACjC,MAAME,kBAAkBH,OAAMC,MAAM,CAAC;IACrCG,IAAAA,2CAA6B,EAAC,CAACC;QAC3BN,gBAAgBO,OAAO,GAAGD;QAC1B,MAAME,SAASC;QACf,IAAI,CAACD,QAAQ;YACT;QACJ;QACA,IAAIF,0BAA0B;YAC1BE,OAAOE,YAAY,CAACC,kDAAuC,EAAE;QACjE,OAAO;YACHH,OAAOI,eAAe,CAACD,kDAAuC;QAClE;IACJ;IACA,MAAMb,cAAce,IAAAA,gCAAgB,EAACd;IACrC,MAAMe,aAAab,OAAMC,MAAM,CAAC;IAChC,MAAM,EAAEa,YAAY,EAAEC,kBAAkB,EAAE,GAAGC,IAAAA,gCAAe,EAAC;QACzDnB;IACJ;IACA,MAAMW,sBAAsBR,OAAMiB,WAAW,CAAC;QAC1C,IAAIC;QACJ,OAAO,AAACA,CAAAA,sBAAsBL,WAAWP,OAAO,AAAD,MAAO,QAAQY,wBAAwB,KAAK,IAAI,KAAK,IAAIA,oBAAoBC,aAAa,CAAC,CAAC,CAAC,EAAEjB,YAAYI,OAAO,CAAC,CAAC;IACvK,GAAG;QACCO;KACH;IACD,MAAMO,uBAAuBpB,OAAMiB,WAAW,CAAC;QAC3C,IAAII;QACJ,MAAMd,SAASC;QACf,IAAID,QAAQ;YACRA,OAAOI,eAAe,CAACW,qCAA0B;YACjDf,OAAOI,eAAe,CAACD,kDAAuC;QAClE;QACCW,CAAAA,2BAA2BlB,gBAAgBG,OAAO,AAAD,MAAO,QAAQe,6BAA6B,KAAK,IAAI,KAAK,IAAIA,yBAAyBV,eAAe,CAAC;QACzJT,YAAYI,OAAO,GAAG;IAC1B,GAAG;QACCH;QACAK;KACH;IACD,MAAMe,wBAAwBvB,OAAMiB,WAAW,CAAC,CAACO;QAC7C,IAAIH;QACJ,IAAI,CAACG,YAAY;YACb;QACJ;QACAJ;QACAK,IAAAA,8BAAc,EAACD,YAAYX,WAAWP,OAAO;QAC5Ce,CAAAA,2BAA2BlB,gBAAgBG,OAAO,AAAD,MAAO,QAAQe,6BAA6B,KAAK,IAAI,KAAK,IAAIA,yBAAyBZ,YAAY,CAAC,yBAAyBe,WAAWE,EAAE;QAC5LxB,YAAYI,OAAO,GAAGkB,WAAWE,EAAE;QACnCF,WAAWf,YAAY,CAACa,qCAA0B,EAAE;QACpD,IAAIvB,gBAAgBO,OAAO,EAAE;YACzBkB,WAAWf,YAAY,CAACC,kDAAuC,EAAE;QACrE;IACJ,GAAG;QACCP;QACAU;QACAO;KACH;IACD,MAAMO,aAAa3B,OAAM4B,OAAO,CAAC,IAAK,CAAA;YAC9BC,OAAO,CAAC,EAAEC,OAAO,EAAE,GAAG,CAAC,CAAC;gBACpB,MAAMD,QAAQf,aAAae,KAAK;gBAChC,IAAI,CAACC,SAAS;oBACVP,sBAAsBM;gBAC1B;gBACA,OAAOA,UAAU,QAAQA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMH,EAAE;YACjE;YACAK,MAAM,CAAC,EAAED,OAAO,EAAE,GAAG,CAAC,CAAC;gBACnB,MAAMC,OAAOjB,aAAaiB,IAAI;gBAC9B,IAAI,CAACD,SAAS;oBACVP,sBAAsBQ;gBAC1B;gBACA,OAAOA,SAAS,QAAQA,SAAS,KAAK,IAAI,KAAK,IAAIA,KAAKL,EAAE;YAC9D;YACAM,MAAM,CAAC,EAAEF,OAAO,EAAE,GAAG,CAAC,CAAC;gBACnB,MAAMvB,SAASC;gBACf,IAAI,CAACD,QAAQ;oBACT;gBACJ;gBACAO,aAAamB,UAAU,CAAC1B;gBACxB,MAAMyB,OAAOlB,aAAakB,IAAI;gBAC9B,IAAI,CAACF,SAAS;oBACVP,sBAAsBS;gBAC1B;gBACA,OAAOA,SAAS,QAAQA,SAAS,KAAK,IAAI,KAAK,IAAIA,KAAKN,EAAE;YAC9D;YACAQ,MAAM,CAAC,EAAEJ,OAAO,EAAE,GAAG,CAAC,CAAC;gBACnB,MAAMvB,SAASC;gBACf,IAAI,CAACD,QAAQ;oBACT;gBACJ;gBACAO,aAAamB,UAAU,CAAC1B;gBACxB,MAAMyB,OAAOlB,aAAaoB,IAAI;gBAC9B,IAAI,CAACJ,SAAS;oBACVP,sBAAsBS;gBAC1B;gBACA,OAAOA,SAAS,QAAQA,SAAS,KAAK,IAAI,KAAK,IAAIA,KAAKN,EAAE;YAC9D;YACAS,MAAM;gBACFf;YACJ;YACAb,QAAQ;gBACJ,IAAI6B;gBACJ,OAAO,AAACA,CAAAA,uBAAuB5B,qBAAoB,MAAO,QAAQ4B,yBAAyB,KAAK,IAAI,KAAK,IAAIA,qBAAqBV,EAAE;YACxI;YACAW,OAAO,CAACX;gBACJ,IAAI,CAACb,WAAWP,OAAO,EAAE;oBACrB;gBACJ;gBACA,MAAMgC,SAASzB,WAAWP,OAAO,CAACa,aAAa,CAAC,CAAC,CAAC,EAAEO,GAAG,CAAC;gBACxD,IAAIY,QAAQ;oBACRf,sBAAsBe;gBAC1B;YACJ;YACAC,MAAMC,SAAS,EAAE,EAAEV,OAAO,EAAEW,SAAS,EAAE,GAAG,CAAC,CAAC;gBACxC,MAAMH,SAASxB,aAAayB,IAAI,CAACC,WAAWC;gBAC5C,IAAI,CAACX,SAAS;oBACVP,sBAAsBe;gBAC1B;gBACA,OAAOA,WAAW,QAAQA,WAAW,KAAK,IAAI,KAAK,IAAIA,OAAOZ,EAAE;YACpE;QACJ,CAAA,GAAI;QACJZ;QACAD;QACAU;QACAH;QACAZ;KACH;IACDR,OAAM0C,mBAAmB,CAAC9C,eAAe,IAAI+B;IAC7C,OAAO;QACHd,YAAY8B,IAAAA,6BAAa,EAAC9B,YAAYE;QACtCZ;QACAwB;IACJ;AACJ"}